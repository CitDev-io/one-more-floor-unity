name: Build & Deploy Mobile

on:
  push:
    branches:
      - mobile

jobs:
  buildForiOSPlatform:
    name: Download from Github and Build iOS Project
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Download from Github
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - name: Use cached compiled libraries
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
     #- name: Run tests
     #   uses: game-ci/unity-test-runner@v2
     #   env:
     #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
     #   with:
     #     githubToken: ${{ secrets.GITHUB_TOKEN }}
      # Build
      - name: Build for IOS
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: iOS
          versioning: Semantic

      # Output
      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-iOS
          path: build/iOS
          
#      - name: Push WebGL Build to Itch.io
#        uses: josephbmanley/butler-publish-itchio-action@v1.0.2
#        env:
#          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
 #         CHANNEL: webgl
 #         ITCH_GAME: untitled-game-01
 #         ITCH_USER: citizendevelopers
 #         PACKAGE: build
  releaseToAppStore:
    name: Submit to iOS Testflight
    runs-on: macos-latest
    needs: buildForiOSPlatform
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-iOS
          path: build/iOS
      - name: Fix File Permissions and Run Fastlane
        env:
          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_TEAM_NAME: ${{ secrets.APPLE_TEAM_NAME }}
          MATCH_URL: ${{ secrets.MATCH_URL }}
          MATCH_PERSONAL_ACCESS_TOKEN: ${{ secrets.MATCH_PERSONAL_ACCESS_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}
          IOS_APP_ID: io.citdev.kerboblin
          IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          PROJECT_NAME: Kerboblin Crunch
        run: |
          find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          bundle install
          bundle exec fastlane ios beta
      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: build-iOS